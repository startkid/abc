# Linear-Regression

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.datasets import fetch_california_housing
from sklearn.metrics import mean_squared_error , r2_score
data = fetch_california_housing()

df = pd.DataFrame(data.data,columns=data.feature_names)
df['PRICE']=data.target

df.head()
df.describe()
df.info()
df.columns

x= df.drop('PRICE',axis=1)
y=df['PRICE']

x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=42)

model = LinearRegression()
model.fit(x_train,y_train)

y_pred = model.predict(x_test)

rmse = np.sqrt(mean_squared_error(y_test,y_pred))
r2= r2_score(y_test,y_pred)
print(rmse)
print(r2)

coeff_df = pd.DataFrame(model.coef_ , x.columns , columns=['Coefficient'])
coeff_df
